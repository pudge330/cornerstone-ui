@mixin CornerstoneUI_forms() {
	%input_placeholder {
		display: block;
		box-sizing: border-box;
		width: 100%;
		height: 2.4375rem;
		border: 1px solid #cacaca;
		margin: 0 0 1rem 0;
		font-family: inherit;
		font-size: 1rem;
		color: #0a0a0a;
		background-color: #fefefe;
		box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.1);
		border-radius: 0;
		transition: box-shadow 0.5s, border-color 0.25s ease-in-out;
		&:focus {
			border: 1px solid #8a8a8a;
			background-color: #fefefe;
			outline: none;
			box-shadow: 0 0 5px #cacaca;
			// box-shadow: 0 0 0 .2rem rgba(80, 78, 78, 0.25);
			transition: box-shadow 0.5s, border-color 0.25s ease-in-out;
		}
		&:not([type="range"]) {
			-webkit-appearance: none;
			-moz-appearance: none;
		}
	}
	.form-columns {
		> [class*="col-"] {
			vertical-align: top;
		}
	}
	.form-column[class*="col-"] {
		vertical-align: top;	
	}
	label {
		display: inline-block;
		margin-bottom: 0.2rem;
	}
	input.cs-input {
		&:not([type="file"]) {
			padding: 0.5rem;
		}
		@extend %input_placeholder;
		&[type="file"] {
			border: none;
			outline: 1px solid #cacaca;
			transition: outline 0.25s ease-in-out;
			font-size: .85rem;
			&:focus {
				outline: 1px solid #8a8a8a;
			}
		}
	}
	textarea.cs-textarea {
		padding: 0.5rem;
		@extend %input_placeholder;
	}
	.input-wrap {
  		display: block;
		box-sizing: border-box;
		width: 100%;
		padding: 0.425rem 0.5rem 0 0.5rem;
		min-height: 39px;
		border: 1px solid #cacaca;
		margin: 0 0 1rem 0;
  	}
	textarea.cs-textarea {
		border-radius: 0;
		min-height: 39px;
		max-width: 100%;
		height: 94px;
		// height: 149px;
		resize: both;
		min-width: 39px;
		line-height: 1.3;
		padding: 0.5rem;
		&[rows] {
    		height: auto;
    	}
    	&.single {
    		height: 39px;
    	}
    	&.resize-vertical {
    		resize: vertical;
    	}
    	&.resize-horizontal {
    		resize: horizontal;
    	}
    	&.no-resize {
    		resize: none;
    	}
    	&.size-3x {
    		height: 149px;
    	}
    	&.size-4x {
    		height: 204px;
    	}
	}
	input.cs-input::-webkit-input-placeholder,
	textarea.cs-textarea::-webkit-input-placeholder,
	input.cs-input::-moz-placeholder,
	textarea.cs_textarea::-moz-placeholder,
	input.cs-input:-ms-input-placeholder,
	textarea.cs_textarea:-ms-input-placeholder,
	input.cs-input::placeholder,
	textarea.cs_textarea::placeholder {
		color: #cacaca;
  	}
  	input.cs-checkbox,
  	input.cs-radio {
  		display: inline-block;
  		height: 1rem;
  		width: 1rem;
  		overflow: hidden;
  		vertical-align: middle;
  		-webkit-appearance: none;
		-moz-appearance: none;
		background-color: transparent;
		background-repeat: no-repeat;
		// background-position: 50% 50%;
		border: 2px solid #cacaca;
		transition: .2s ease-in-out;
		transition-property: box-shadow, background-image;
		box-sizing: border-box;
		margin: -2px 0.10rem 0 0;
		&:checked {
			border-width: 0px;
		}
		&:focus {
			border: 2px solid #8a8a8a;
			background-position: -2px -2px;
			background-size: calc(100% + 4px) calc(100% + 4px);
			box-shadow: 0 0 5px #cacaca;
		}
  	}
  	input.cs-checkbox {
  		border-radius: 0;
  		&:checked {
  			background-image: url('data:image/svg+xml;utf8,%3Csvg%20width%3D%22100%25%22%20height%3D%22100%25%22%20viewBox%3D%220%200%20512%20512%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20xml%3Aspace%3D%22preserve%22%20xmlns%3Aserif%3D%22http%3A%2F%2Fwww.serif.com%2F%22%20style%3D%22fill-rule%3Aevenodd%3Bclip-rule%3Aevenodd%3Bstroke-linejoin%3Around%3Bstroke-miterlimit%3A1.41421%3B%22%3E%3Crect%20x%3D%220%22%20y%3D%220%22%20width%3D%22512%22%20height%3D%22512%22%20style%3D%22fill%3A%2309f%3B%22%2F%3E%3Cpath%20d%3D%22M512%2C512l-512%2C0l0%2C-512l512%2C0l0%2C512Zm-502%2C-502l0%2C492l492%2C0l0%2C-492l-492%2C0Z%22%20style%3D%22fill%3A%2309f%3B%22%2F%3E%3Cpath%20d%3D%22M261.687%2C393.289l-163.83%2C-114.716l-31.547%2C45.054l163.83%2C114.715l31.547%2C-45.053Z%22%20style%3D%22fill%3A%23fff%3B%22%2F%3E%3Cpath%20d%3D%22M414.518%2C79.135l-229.431%2C327.66l45.053%2C31.547l229.431%2C-327.661l-45.053%2C-31.546Z%22%20style%3D%22fill%3A%23fff%3B%22%2F%3E%3C%2Fsvg%3E');
  		}
  	}
  	input.cs-radio {
  		border-radius: 50%;
  		&:checked {
  			background-image: url('data:image/svg+xml;utf8,%3Csvg%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20preserveAspectRatio%3D%22xMidYMid%20meet%22%20viewBox%3D%220%200%20682.667%20682.667%22%20width%3D%22100%25%22%20height%3D%22100%25%22%3E%3Cpath%20fill%3D%22%230099ff%22%20d%3D%22M682.67%20341.33C682.67%20529.72%20529.72%20682.66%20341.33%20682.66C152.94%20682.66%200%20529.72%200%20341.33C0%20152.94%20152.94%200%20341.33%200C529.72%200%20682.67%20152.94%20682.67%20341.33Z%22%20id%3D%22ap5mkxn9H%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E');
  		}
  	}
  	select.cs-select {
  		width: 100%;
		height: 2.4375rem;
		padding: 0.5rem;
		border: 1px solid #cacaca;
		margin: 0 0 1rem;
		font-size: 1rem;
		font-family: inherit;
		line-height: normal;
		color: #0a0a0a;
		background-color: #fefefe;
		border-radius: 0;
		-webkit-appearance: none;
		-moz-appearance: none;
		background-image: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%22100%25%22%20height%3D%22100%25%22%20viewBox%3D%220%200%20425%20250%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20xml%3Aspace%3D%22preserve%22%20xmlns%3Aserif%3D%22http%3A%2F%2Fwww.serif.com%2F%22%20style%3D%22fill-rule%3Aevenodd%3Bclip-rule%3Aevenodd%3Bstroke-linejoin%3Around%3Bstroke-miterlimit%3A1.41421%3B%22%3E%3Cpath%20d%3D%22M386.042%2C0l-212.5%2C211.268l38.958%2C38.732l212.5%2C-211.268l-38.958%2C-38.732Z%22%20style%3D%22fill%3A%23a2a2a2%3B%22%2F%3E%3Cpath%20d%3D%22M251.458%2C211.268l-212.5%2C-211.268l-38.958%2C38.732l212.5%2C211.268l38.958%2C-38.732Z%22%20style%3D%22fill%3A%23a2a2a2%3B%22%2F%3E%3C%2Fsvg%3E");
		background-size: 15px 8px;
		background-position: right -1rem center;
		background-origin: content-box;
		background-repeat: no-repeat;
		padding-right: 1.5rem;
		&:disabled {
			background-color: #cacaca;
			cursor: not-allowed;
		}
		&::-ms-expand {
			display: none;
		}
		&[multiple] {
			height: 94px;
			resize: vertical;
			background-image: none; 
			padding: 0.5rem 0.5rem 0 0.5rem;
			min-height: 39px;
			&.single {
	    		height: 39px;
	    	}
			option {
				padding: 0.15rem 0.25rem;
				&:last-child {
					margin-bottom: 0.5rem;
				} 
			}
		}
		&:focus {
			border: 1px solid #8a8a8a;
		}
	}
	input.cs-button,
	button.cs-button,
	a.cs-button {
		-webkit-appearance: none;
		-moz-appearance: none;
		line-height: 1;
		display: inline-block;
		text-align: center;
		cursor: pointer;
		transition: background-color 0.25s ease-out, color 0.25s ease-out;
		vertical-align: middle;
		border: 1px solid transparent;
		border-radius: 0;
		padding: 0.7695em 1em 0.8em 1em;
		margin: 0 0 1rem 0;
		font-size: 0.9rem;
		background-color: csColor('gray', 'dark');
		color: #fefefe;
		width: auto;
		text-decoration: none;
		&:hover
		,&:focus {
		    background-color: csColor('gray', 'dark-2x');
			text-decoration: none;
			&.underline {
				text-decoration: underline;
			}
		}
		&:active {
		    background-color: csColor('gray', 'dark');
		}
		&.expanded {
			display: block;
			width: 100%;
			margin-left: 0;
			margin-right: 0;
		}
		&.tiny {
			font-size: 0.6rem;
			padding: 0.55em 1em 0.55em 1em;
		}
		&.small {
			font-size: 0.75rem;
		}
		&.large {
			font-size: 1.25rem;
		}
		&.large-2x {
			font-size: 2.25rem;
		}
		&.rounded {
			border-radius: 5px;
		}
		&.pill {
			border-radius: 100px;
			padding-left: 1.75em;
			padding-right: 1.75em;
		}
		&.clear {
			color: csColor('gray', 'dark');
			background-color: transparent;
			&:hover
			,&:focus {
			    color: csColor('gray', 'dark-3x');
			}
			&:active {
			    background-color: csColor('gray', 'dark');
			}
		}
		&.outline {
			background-color: white;
			background-color: transparent;
			color: csColor('gray', 'dark');
			border-color: csColor('gray', 'dark');
			&:hover,
			&:focus {
				color: csColor('gray', 'dark-3x');
				border-color: csColor('gray', 'dark-3x');
				&.fill {
					color: #fff;
					border-color: csColor('gray', 'dark-2x');
					background-color: csColor('gray', 'dark-2x');
				}
			}
			&:active {
				color: csColor('gray', 'dark');
				border-color: csColor('gray', 'dark');
				&.fill {
					color: #fff;
					border-color: csColor('gray', 'dark');
					background-color: csColor('gray', 'dark');
				}
			}
		}
		@each $name, $colors in $cs_colors {
			@if $name != 'generic' and $name != 'gray' {
				&.button-#{$name} {
					background: csColor($name, 'base');
					&:hover,
					&:focus {
						background-color: csColor($name, 'dark-2x');
					}
					&:active {
						background-color: csColor($name, 'base');
					}
					&.clear {
						background-color: transparent;
						color: csColor($name, 'base');
						&:hover
						,&:focus {
						    color: csColor($name, 'dark-3x');
						}
						&:active {
						    background-color: csColor($name, 'base');
						}
					}
					&.outline {
						background-color: white;
						background-color: transparent;
						color: csColor($name, 'base');
						border-color: csColor($name, 'base');
						&:hover,
						&:focus {
							color: csColor($name, 'dark-3x');
							border-color: csColor($name, 'dark-3x');
							&.fill {
								color: #fff;
								border-color: csColor($name, 'dark-2x');
								background-color: csColor($name, 'dark-2x');
							}
						}
						&:active {
							color: csColor($name, 'base');
							border-color: csColor($name, 'base');
							&.fill {
								color: #fff;
								border-color: csColor($name, 'base');
								background-color: csColor($name, 'base');
							}
						}
					}
				}
			}
		}
	}
	.toggle {
		height: 2rem;
		margin-bottom: 1rem;
		outline: 0;
		position: relative;
		-webkit-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		user-select: none;
		color: #fefefe;
		font-weight: bold;
		font-size: 0.875rem;
		.toggle-input {
			opacity: 0;
			position: absolute;
			margin-bottom: 0;
		}
		.toggle-paddle {
			background: #cacaca;
			cursor: pointer;
			display: block;
			position: relative;
			width: 4rem;
			height: 2rem;
			transition: all 0.25s ease-out;
			border-radius: 0;
			color: inherit;
			font-weight: inherit;
		}
		input + .toggle-paddle {
			margin: 0;
		}
		.toggle-paddle::after {
			background: #fefefe;
			content: '';
			display: block;
			position: absolute;
			height: 1.5rem;
			left: 0.25rem;
			top: 0.25rem;
			width: 1.5rem;
			transition: all 0.25s ease-out;
			-webkit-transform: translate3d(0, 0, 0);
			transform: translate3d(0, 0, 0);
			border-radius: 0;
		}
		input:checked ~ .toggle-paddle {
			background: csColor('primary', 'base');
		}
		input:checked ~ .toggle-paddle::after {
			left: 2.25rem;
		}
		.toggle-active, .toggle-inactive {
			position: absolute;
			top: 50%;
			-webkit-transform: translateY(-50%);
			-ms-transform: translateY(-50%);
			transform: translateY(-50%);
		}
		.toggle-active {
			left: 8%;
			display: none;
		}
		input:checked + label > .toggle-active {
			display: block;
		}
		.toggle-inactive {
			right: 15%;
		}
		input:checked + label > .toggle-inactive {
			display: none;
		}
		&.tiny {
			height: 1.5rem;
		}
		&.tiny .toggle-paddle {
			width: 3rem;
			height: 1.5rem;
			font-size: 0.625rem;
		}
		&.tiny .toggle-paddle::after {
			width: 1rem;
			height: 1rem;
		}
		&.tiny input:checked ~ .toggle-paddle::after {
			left: 1.75rem;
		}
		&.small {
			height: 1.75rem;
		}
		&.small .toggle-paddle {
			width: 3.5rem;
			height: 1.75rem;
			font-size: 0.75rem;
		}
		&.small .toggle-paddle::after {
			width: 1.25rem;
			height: 1.25rem;
		}
		&.small input:checked ~ .toggle-paddle::after {
			left: 2rem;
		}
		&.large {
			height: 2.5rem;
		}
		&.large .toggle-paddle {
			width: 5rem;
			height: 2.5rem;
			font-size: 1rem;
		}
		&.large .toggle-paddle::after {
			width: 2rem;
			height: 2rem;
		}
		&.large input:checked ~ .toggle-paddle::after {
			left: 2.75rem;
		}
		@each $name, $colors in $cs_colors {
			@if $name != 'generic' and $name != 'gray' {
				&.toggle-#{"" + $name} {
					input:checked ~ .toggle-paddle {
						background: csColor($name, 'base');;
					}
				}
			}
		}
		&.rounded {
			.toggle-paddle {
				border-radius: 50px;
				&:after {
					border-radius: 50%;
				}
			}
		}
	}
	// [data-whatinput='mouse'] input:focus ~ .toggle-paddle {
	// 	outline: 0;
	// }
}